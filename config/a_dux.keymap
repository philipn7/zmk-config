#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keycodes.h"

// LAYERS
#define DEF 0
#define NAV 1
#define NUM 2

#include "combos.dtsi"
#include "mod_morph.dtsi"

&sk {
    // One Shot Mod
    release-after-ms = <6000>;
};
&sl {
    // One Shot Layer
    release-after-ms = <1000>;
};

/ {
    behaviors {
      // Sticky Key with Quick Release
      skq: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        label = "STICKY_KEY_QUICK_RELEASE";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <2000>;
        quick-release;
      };

      // Home Row Mods
      lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
      };
      rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 7 8 9 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]
      };

      // Double tap CAPSLOCK on shift
      td_shift_caps: td_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <osqSHFT>, <&kp CAPSLOCK>;
        };
    };
};

/ {
  
  keymap {
    
    compatible = "zmk,keymap";

    base_layer {
      label = "DEF";
      bindings = <
        ___J___  ___G___  ___M___  ___P___  ___V___    _MINUS_  __DOT__  _SLASH_  _SQUOT_  _SCOLN_
        a__R___  g__S___  c__N___  s__D___  ___B___    _COMMA_  s__A___  c__E___  g__I___  a__H___
        ___X___  ___F___  ___L___  ___C___  ___W___    _EQUAL_  ___U___  ___O___  ___Y___  ___K___
                                   o_NUM_o  x_NAV_x    _SPACE_  td_SHFT  
      >;
    };

    nav_layer {
      label = "NAV";
      bindings = <
        _______  _HOME__  __UP___  __END__  _LGUI__    _______  ___7___  ___8___  ___9___  _______    
        _LSHFT_  _LEFT__  _DOWN__  _RIGHT_  _______    ___0___  ___4___  ___5___  ___6___  _______    
        _LCTRL_  os_GUI_  os_CTRL  os_SHFT  os_ALT_    _______  ___1___  ___2___  ___3___  _______    
                                   _______  _______    _SPACE_  _______                 
      >;
    };

    num_layer {
      label = "NUM";
      bindings = <
        _______  _______  _______  _______  _______    _______  ___7___  ___8___  ___9___  _______
        _______  _______  _______  _______  _______    ___0___  ___4___  ___5___  ___6___  _______
        _______  _______  _______  _______  _______    _______  ___1___  ___2___  ___3___  _______
                                   _______  _______    _______  _______                    
      >;
    };

  };
};