/ {
    behaviors {
      morph_minus_plus: morph_minus_plus {
        compatible = "zmk,behavior-mod-morph";
        label = "MORPH_MINUS_PLUS";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp PLUS>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      morph_braces: morph_braces {
        compatible = "zmk,behavior-mod-morph";
        label = "MORPH_BRACES";
        #binding-cells = <0>;
        bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      morph_brackets: morph_brackets {
        compatible = "zmk,behavior-mod-morph";
        label = "MORPH_BRACKETS";
        #binding-cells = <0>;
        bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      morph_lt_gt: morph_lt_gt {
        compatible = "zmk,behavior-mod-morph";
        label = "MORPH_LT_GT";
        #binding-cells = <0>;
        bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      morph_parens: morph_parens {
        compatible = "zmk,behavior-mod-morph";
        label = "MORPH_PARENS";
        #binding-cells = <0>;
        bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      morph_slashes: morph_slashes {
        compatible = "zmk,behavior-mod-morph";
        label = "MORPH_SLASHES";
        #binding-cells = <0>;
        bindings = <&kp FSLH>, <&kp BSLH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      morph_equals_arrow: morph_equals_arrow {
        compatible = "zmk,behavior-mod-morph";
        label = "MORPH_EQUALS_ARROW";
        #binding-cells = <0>;
        bindings = <&kp EQUAL>, <&m_equals_arrow>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

};