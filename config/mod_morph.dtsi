#define MOD_MORPH_MASKED(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
    masked_mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

#define MOD_MORPH(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

#define MOD_MORPH_NOSHIFT_MACRO(NAME, KEY, MOD_KEY) \
ZMK_MACRO(macro_##NAME,\
   wait-ms = <0>;\
   tap-ms = <0>;\
   bindings\
   = <&macro_tap &kp MOD_KEY> \
   ;)\
\
mm_##NAME: mm_##NAME {\
   compatible = "zmk,behavior-mod-morph";\
   label = #NAME;\
   #binding-cells = <0>;\
   bindings = <&kp KEY>, <&macro_##NAME>;\
   mods = <(MOD_LSFT|MOD_RSFT)>;\
   masked_mods = <(MOD_LSFT|MOD_RSFT)>; \
}; \

/ {
    behaviors {
      // Parens an Brackets
      MOD_MORPH_MASKED(brackets, LEFT_BRACKET, RIGHT_BRACKET)
      MOD_MORPH(braces, LEFT_BRACE, RIGHT_BRACE)
      MOD_MORPH(lt_gt, LESS_THAN, GREATER_THAN)
      MOD_MORPH(parens, LEFT_PARENTHESIS, RIGHT_PARENTHESIS)
      MOD_MORPH_MASKED(slashes, SLASH, BACKSLASH)

      // Symbols
      MOD_MORPH(minus_plus, MINUS, PLUS)
      MOD_MORPH_NOSHIFT_MACRO(equals_arrow, EQUAL, EQUAL &kp GREATER_THAN)
    };
};

#undef MOD_MORPH